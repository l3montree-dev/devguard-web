import {
  Document,
  Page,
  StyleSheet,
  Text,
  View,
  Image,
} from "@react-pdf/renderer";
import { FunctionComponent } from "react";

interface headerProps {
  title: string;
  project: string;
  repo: string;
  logoLink: string;
}

interface footerProps {
  datum: string;
}

interface PdfDocumentProps {
  header: headerProps;
  body: any;
  footer: footerProps;
}

const PdfDocument: FunctionComponent<PdfDocumentProps> = (props) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <PdfHeader {...props.header} />
      <View style={styles.body}>{props.body}</View>
      <PdfFooter datum={props.footer.datum} />
    </Page>
  </Document>
);

export default PdfDocument;

const styles = StyleSheet.create({
  fullPage: {
    position: "absolute",
    top: 0,
    left: 0,
    height: "100vh",
  },
  page: {
    //    fontFamily: "Inter",
    paddingTop: 150,
    paddingBottom: 100,
    paddingHorizontal: 75,
    fontSize: 12,
  },
  startPage: {
    //  fontFamily: "Inter",
  },
  body: {},
  logo: {
    position: "absolute",
    top: 10,
    right: 10,
  },
  section: {
    marginBottom: 10,
  },
  hero: {
    position: "absolute",
    bottom: 100,
    padding: 50,
    color: "#17406E",
  },
  h1: {
    fontSize: 24,
    marginBottom: 10,
    fontWeight: "bold",
  },
  h2: {
    fontSize: 18,
    marginBottom: 10,
    fontWeight: "bold",
  },
  h3: {
    fontSize: 16,
    marginBottom: 10,
    fontWeight: "bold",
  },
  h4: {
    fontSize: 14,
    marginBottom: 7,
    marginTop: 14,
    fontWeight: "bold",
  },
  p: {
    fontSize: 12,
    marginBottom: 10,
  },
  list: {
    flexDirection: "column",
  },
  bold: {
    fontWeight: "bold",
  },
  pageNumber: {},
  header: {
    //  fontFamily: "Inter",
    position: "absolute",
    fontSize: 10,
    paddingHorizontal: 75,
    paddingTop: 50,
    top: 0,
    left: 0,
  },
  headerText: {
    display: "flex",
    flexDirection: "column",
    width: "100%",
    paddingBottom: 20,
    gap: 2,
  },
  headerRepoText: {
    fontWeight: "bold",
    width: "100%",
  },
  footer: {
    position: "absolute",
    fontSize: 10,
    paddingHorizontal: 50,
    paddingBottom: 50,
    bottom: 0,
    left: 0,
  },
  footerText: {
    display: "flex",
    flexDirection: "row",
    width: "100%",
    gap: 10,
  },

  footerBox: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    borderTop: "1px solid #000",
    paddingTop: 10,
    paddingBottom: 20,
  },

  headerBox: {
    display: "flex",
    flexDirection: "row",
    justifyContent: "space-between",
    borderBottom: "1px solid #000",
    paddingTop: 10,
    paddingBottom: 20,
  },
  border: {},
});

const Logo = ({ logoLink }: { logoLink: string }) => (
  <View style={styles.logo}>
    {/* eslint-disable-next-line jsx-a11y/alt-text */}
    <Image src={logoLink} style={{ width: 75 }} />
  </View>
);
const PdfHeader = (props: headerProps) => (
  <View fixed style={styles.header}>
    <View style={styles.headerBox}>
      <View style={styles.headerText}>
        <Text>{props.title}</Text>
        <Text>{props.project}</Text>
        <Text style={styles.headerRepoText}>{props.repo}</Text>
      </View>
      <View style={styles.logo}>
        <Logo logoLink={props.logoLink} />
      </View>
    </View>
  </View>
);

const PdfFooter = (props: footerProps) => (
  <View fixed style={styles.footer}>
    <View fixed style={styles.footerBox}>
      <View style={styles.footerText}>
        <Text>{props.datum}</Text>
        <Text>Generated by DevGuard</Text>
      </View>
      <View style={styles.pageNumber}>
        <Text render={({ pageNumber }) => `${pageNumber}`} />
      </View>
    </View>
  </View>
);
